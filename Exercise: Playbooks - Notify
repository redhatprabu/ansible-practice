NOTE: These exercises can be completed on Linux Academy Lab Servers with any distribution and version available AS LONG AS the Ansible application has been installed and the 'user' user has been set up with SSH Key Exchange for password less SSH sessions (see previous lab for setup). 
1. Verify that your ansible installation is available by displaying the version of ansible while logged in as the 'user' user.
2. Run the ansible command that lists all of the hosts configured in your control server 'hosts' file for the system.
3. Create a playbook, using the 'NOTIFY' concepts from the video:
- Uses SSH
- Logs in to the remote system as 'test' user
- Connects to one server or group from Step #2 above
- The playbook runs as 'sudo'
- Skip gathering remote facts
- Installs the 'Apache Web Server' using the appropriate package module
- Upon installation of the web server, notifies the appropriately titled handler to restart the service using the 'service' module
4. Run the playbook and display the results.



Solution : 



1. Verify that your ansible installation is available by displaying the version of ansible while logged in as the 'user' user.
[test@tcox3 ~]$ ansible --version
ansible 1.9.2
  configured module search path = None
 
2. Run the ansible command that lists all of the hosts configured in your control server 'hosts' file for the system.
[test@tcox3 ~]$ ansible all --list-hosts
    tcox5.mylabserver.com
    localhost
    tcox4.mylabserver.com
 
3. Create a playbook, using the 'NOTIFY' concepts from the video:
- Uses SSH
- Logs in to the remote system as 'test' user
- Connects to one server or group from Step #2 above
- The playbook runs as 'sudo'
- Skip gathering remote facts
- Installs the 'Apache Web Server' using the appropriate package module
- Upon installation of the web server, notifies the appropriately titled handler to restart the service using the 'service' module
[test@tcox3 Playbooks]$ vim notify.yml
[test@tcox3 Playbooks]$ cat notify.yml
--- # My First YAML Playbook for Ansible
- hosts: apacheweb
  user: test
  sudo: yes
  connection: ssh
  gather_facts: no
  tasks:
    - name: Install Apache Web Server
      action: yum name=httpd state=installed
      notify: Restart HTTPD
  handlers:
    - name: Restart HTTPD
      action: service name=httpd state=restarted
 
4. Run the playbook and display the results.
[test@tcox3 Playbooks]$ ansible-playbook notify.yml
 
PLAY [apacheweb] **************************************************************
 
TASK: [Install Apache Web Server] *********************************************
changed: [tcox4.mylabserver.com]
 
NOTIFIED: [Restart HTTPD] *****************************************************
changed: [tcox4.mylabserver.com]
 
PLAY RECAP ********************************************************************
tcox4.mylabserver.com      : ok=2    changed=2    unreachable=0    failed=0
 
[test@tcox3 Playbooks]$ ssh tcox4
Last login: Wed Oct 14 15:27:43 2015 from ec2-52-91-231-138.compute-1.amazonaws.com
[test@tcox4 ~]$ ps aux | grep http
root      2042  0.0  0.4 213080  4752 ?        Ss   15:27   0:00 /usr/sbin/httpd -DFOREGROUND
apache    2043  0.0  0.2 213080  2752 ?        S    15:27   0:00 /usr/sbin/httpd -DFOREGROUND
apache    2044  0.0  0.2 213080  2752 ?        S    15:27   0:00 /usr/sbin/httpd -DFOREGROUND
apache    2045  0.0  0.2 213080  2752 ?        S    15:27   0:00 /usr/sbin/httpd -DFOREGROUND
apache    2046  0.0  0.2 213080  2752 ?        S    15:27   0:00 /usr/sbin/httpd -DFOREGROUND
apache    2047  0.0  0.2 213080  2752 ?        S    15:27   0:00 /usr/sbin/httpd -DFOREGROUND
test      2077  0.0  0.0 112640   964 pts/0    R+   15:28   0:00 grep --color=auto http
 
